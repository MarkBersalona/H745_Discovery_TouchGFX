/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREENSETTINGS1VIEWBASE_HPP
#define SCREENSETTINGS1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screensettings1_screen/ScreenSettings1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/RadioButton.hpp>
#include <touchgfx/widgets/RadioButtonGroup.hpp>

class ScreenSettings1ViewBase : public touchgfx::View<ScreenSettings1Presenter>
{
public:
    ScreenSettings1ViewBase();
    virtual ~ScreenSettings1ViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void setLanguageEnglish()
    {
        // Override and implement this function in ScreenSettings1
    }
    virtual void setLanguageDeutsch()
    {
        // Override and implement this function in ScreenSettings1
    }
    virtual void functionEnableDHCP()
    {
        // Override and implement this function in ScreenSettings1
    }
    virtual void functionDisableDHCP()
    {
        // Override and implement this function in ScreenSettings1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box boxSettings1Background;
    touchgfx::Box boxMainTitleBackground;
    touchgfx::TextArea textAreaSettings1;
    touchgfx::ButtonWithLabel buttonWithLabelReturnMain;
    touchgfx::TextArea textAreaZWaveSentinel;
    touchgfx::TextArea textAreaSettingsLanguageTitle;
    touchgfx::RadioButtonGroup<2> radioButtonGroupLanguage;
    touchgfx::RadioButton radioButtonSettings1LanguageEnglish;
    touchgfx::RadioButton radioButtonSettings1LanguageDeutsch;
    touchgfx::TextArea textAreaSettings1English;
    touchgfx::TextArea textAreaSettings1Deutsch;
    touchgfx::TextArea textAreaSettings1IPTitle;
    touchgfx::RadioButtonGroup<2> radioButtonGroupIP;
    touchgfx::RadioButton radioButtonSettings1IPDHCP;
    touchgfx::RadioButton radioButtonSettings1IPStatic;
    touchgfx::TextArea textAreaSettings1IP_DHCP;
    touchgfx::TextArea textAreaSettings1IPStatic;
    touchgfx::ButtonWithLabel buttonWithLabelIPSettings;
    touchgfx::TextArea textAreaSettings1Status;
    touchgfx::ButtonWithLabel buttonWithLabelPrevious;
    touchgfx::ButtonWithLabel buttonWithLabelNext;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ScreenSettings1ViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<ScreenSettings1ViewBase, const touchgfx::AbstractButton&> radioButtonSelectedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREENSETTINGS1VIEWBASE_HPP
