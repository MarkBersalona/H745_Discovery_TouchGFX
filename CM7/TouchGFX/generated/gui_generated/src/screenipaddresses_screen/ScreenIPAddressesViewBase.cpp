/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screenipaddresses_screen/ScreenIPAddressesViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

ScreenIPAddressesViewBase::ScreenIPAddressesViewBase() :
    buttonCallback(this, &ScreenIPAddressesViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &ScreenIPAddressesViewBase::flexButtonCallbackHandler),
    frameCountInteractionUpdateSelectedAddressWithCounterInterval(0)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    boxSettings1Background.setPosition(0, 0, 480, 272);
    boxSettings1Background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(boxSettings1Background);

    boxMainTitleBackground.setPosition(0, 0, 480, 24);
    boxMainTitleBackground.setColor(touchgfx::Color::getColorFromRGB(48, 82, 33));
    add(boxMainTitleBackground);

    textAreaZWaveSentinel.setXY(0, 0);
    textAreaZWaveSentinel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaZWaveSentinel.setLinespacing(0);
    textAreaZWaveSentinel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YA2S));
    add(textAreaZWaveSentinel);

    textAreaIPAddresses.setPosition(321, 0, 159, 24);
    textAreaIPAddresses.setColor(touchgfx::Color::getColorFromRGB(255, 225, 0));
    textAreaIPAddresses.setLinespacing(0);
    textAreaIPAddresses.setTypedText(touchgfx::TypedText(T_TEXTID_IPADDRESSES));
    add(textAreaIPAddresses);

    buttonWithLabelIPAddressReturn.setXY(367, 225);
    buttonWithLabelIPAddressReturn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    buttonWithLabelIPAddressReturn.setLabelText(touchgfx::TypedText(T___SINGLEUSE_EI3H));
    buttonWithLabelIPAddressReturn.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonWithLabelIPAddressReturn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelIPAddressReturn.setAction(buttonCallback);
    add(buttonWithLabelIPAddressReturn);

    textAreaAddressTitle.setPosition(29, 59, 161, 25);
    textAreaAddressTitle.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaAddressTitle.setLinespacing(0);
    textAreaAddressTitle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4LQV));
    add(textAreaAddressTitle);

    textAreaDNSTitle.setPosition(29, 91, 161, 27);
    textAreaDNSTitle.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaDNSTitle.setLinespacing(0);
    textAreaDNSTitle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LHBH));
    add(textAreaDNSTitle);

    textAreaGatewayTitle.setPosition(29, 124, 161, 27);
    textAreaGatewayTitle.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaGatewayTitle.setLinespacing(0);
    textAreaGatewayTitle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WT6C));
    add(textAreaGatewayTitle);

    textAreaNetmaskTitle.setPosition(29, 157, 161, 27);
    textAreaNetmaskTitle.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaNetmaskTitle.setLinespacing(0);
    textAreaNetmaskTitle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V338));
    add(textAreaNetmaskTitle);

    buttonWithLabelIPAddressRevert.setXY(122, 196);
    buttonWithLabelIPAddressRevert.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID));
    buttonWithLabelIPAddressRevert.setLabelText(touchgfx::TypedText(T___SINGLEUSE_1L1Y));
    buttonWithLabelIPAddressRevert.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonWithLabelIPAddressRevert.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelIPAddressRevert.setAction(buttonCallback);
    add(buttonWithLabelIPAddressRevert);

    buttonWithLabelIPAddressApply.setXY(254, 196);
    buttonWithLabelIPAddressApply.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID));
    buttonWithLabelIPAddressApply.setLabelText(touchgfx::TypedText(T___SINGLEUSE_8YKZ));
    buttonWithLabelIPAddressApply.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonWithLabelIPAddressApply.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelIPAddressApply.setAction(buttonCallback);
    add(buttonWithLabelIPAddressApply);

    containerIP_Netmask1.setPosition(204, 158, 50, 34);
    flexButtonNetmask1.setBoxWithBorderPosition(0, 0, 50, 34);
    flexButtonNetmask1.setBorderSize(5);
    flexButtonNetmask1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 238, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButtonNetmask1.setAction(flexButtonCallback);
    flexButtonNetmask1.setPosition(0, 0, 50, 34);
    containerIP_Netmask1.add(flexButtonNetmask1);

    textAreaNetmask1.setPosition(6, 6, 39, 24);
    textAreaNetmask1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaNetmask1.setLinespacing(0);
    Unicode::snprintf(textAreaNetmask1Buffer, TEXTAREANETMASK1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_F1K7).getText());
    textAreaNetmask1.setWildcard(textAreaNetmask1Buffer);
    textAreaNetmask1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FMT3));
    containerIP_Netmask1.add(textAreaNetmask1);

    add(containerIP_Netmask1);

    containerIP_Netmask2.setPosition(256, 158, 50, 34);
    flexButtonNetmask2.setBoxWithBorderPosition(0, 0, 50, 34);
    flexButtonNetmask2.setBorderSize(5);
    flexButtonNetmask2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 238, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButtonNetmask2.setAction(flexButtonCallback);
    flexButtonNetmask2.setPosition(0, 0, 50, 34);
    containerIP_Netmask2.add(flexButtonNetmask2);

    textAreaNetmask2.setPosition(6, 6, 39, 24);
    textAreaNetmask2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaNetmask2.setLinespacing(0);
    Unicode::snprintf(textAreaNetmask2Buffer, TEXTAREANETMASK2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_OZ4H).getText());
    textAreaNetmask2.setWildcard(textAreaNetmask2Buffer);
    textAreaNetmask2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JQP3));
    containerIP_Netmask2.add(textAreaNetmask2);

    add(containerIP_Netmask2);

    containerIP_Netmask3.setPosition(306, 158, 50, 34);
    flexButtonNetmask3.setBoxWithBorderPosition(0, 0, 50, 34);
    flexButtonNetmask3.setBorderSize(5);
    flexButtonNetmask3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 238, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButtonNetmask3.setAction(flexButtonCallback);
    flexButtonNetmask3.setPosition(0, 0, 50, 34);
    containerIP_Netmask3.add(flexButtonNetmask3);

    textAreaNetmask3.setPosition(6, 6, 39, 24);
    textAreaNetmask3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaNetmask3.setLinespacing(0);
    Unicode::snprintf(textAreaNetmask3Buffer, TEXTAREANETMASK3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SBS5).getText());
    textAreaNetmask3.setWildcard(textAreaNetmask3Buffer);
    textAreaNetmask3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I7UV));
    containerIP_Netmask3.add(textAreaNetmask3);

    add(containerIP_Netmask3);

    containerIP_Netmask4.setPosition(356, 159, 50, 34);
    flexButtonNetmask4.setBoxWithBorderPosition(0, 0, 50, 34);
    flexButtonNetmask4.setBorderSize(5);
    flexButtonNetmask4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 238, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButtonNetmask4.setAction(flexButtonCallback);
    flexButtonNetmask4.setPosition(0, 0, 50, 34);
    containerIP_Netmask4.add(flexButtonNetmask4);

    textAreaNetmask4.setPosition(6, 6, 39, 24);
    textAreaNetmask4.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaNetmask4.setLinespacing(0);
    Unicode::snprintf(textAreaNetmask4Buffer, TEXTAREANETMASK4_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YZ2E).getText());
    textAreaNetmask4.setWildcard(textAreaNetmask4Buffer);
    textAreaNetmask4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K0V2));
    containerIP_Netmask4.add(textAreaNetmask4);

    add(containerIP_Netmask4);

    containerIP_Gateway1.setPosition(204, 124, 50, 34);
    flexButtonGateway1.setBoxWithBorderPosition(0, 0, 50, 34);
    flexButtonGateway1.setBorderSize(5);
    flexButtonGateway1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 238, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButtonGateway1.setAction(flexButtonCallback);
    flexButtonGateway1.setPosition(0, 0, 50, 34);
    containerIP_Gateway1.add(flexButtonGateway1);

    textAreaGateway1.setPosition(6, 6, 39, 24);
    textAreaGateway1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaGateway1.setLinespacing(0);
    Unicode::snprintf(textAreaGateway1Buffer, TEXTAREAGATEWAY1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RHYM).getText());
    textAreaGateway1.setWildcard(textAreaGateway1Buffer);
    textAreaGateway1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XPBP));
    containerIP_Gateway1.add(textAreaGateway1);

    add(containerIP_Gateway1);

    containerIP_Gateway2.setPosition(256, 124, 50, 34);
    flexButtonGateway2.setBoxWithBorderPosition(0, 0, 50, 34);
    flexButtonGateway2.setBorderSize(5);
    flexButtonGateway2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 238, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButtonGateway2.setAction(flexButtonCallback);
    flexButtonGateway2.setPosition(0, 0, 50, 34);
    containerIP_Gateway2.add(flexButtonGateway2);

    textAreaGateway2.setPosition(6, 6, 39, 24);
    textAreaGateway2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaGateway2.setLinespacing(0);
    Unicode::snprintf(textAreaGateway2Buffer, TEXTAREAGATEWAY2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DVGV).getText());
    textAreaGateway2.setWildcard(textAreaGateway2Buffer);
    textAreaGateway2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T9GN));
    containerIP_Gateway2.add(textAreaGateway2);

    add(containerIP_Gateway2);

    containerIP_Gateway3.setPosition(306, 124, 50, 34);
    flexButtonGateway3.setBoxWithBorderPosition(0, 0, 50, 34);
    flexButtonGateway3.setBorderSize(5);
    flexButtonGateway3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 238, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButtonGateway3.setAction(flexButtonCallback);
    flexButtonGateway3.setPosition(0, 0, 50, 34);
    containerIP_Gateway3.add(flexButtonGateway3);

    textAreaGateway3.setPosition(6, 6, 39, 24);
    textAreaGateway3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaGateway3.setLinespacing(0);
    Unicode::snprintf(textAreaGateway3Buffer, TEXTAREAGATEWAY3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_3ZWG).getText());
    textAreaGateway3.setWildcard(textAreaGateway3Buffer);
    textAreaGateway3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JR18));
    containerIP_Gateway3.add(textAreaGateway3);

    add(containerIP_Gateway3);

    containerIP_Gateway4.setPosition(356, 124, 50, 34);
    flexButtonGateway4.setBoxWithBorderPosition(0, 0, 50, 34);
    flexButtonGateway4.setBorderSize(5);
    flexButtonGateway4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 238, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButtonGateway4.setAction(flexButtonCallback);
    flexButtonGateway4.setPosition(0, 0, 50, 34);
    containerIP_Gateway4.add(flexButtonGateway4);

    textAreaGateway4.setPosition(6, 6, 39, 24);
    textAreaGateway4.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaGateway4.setLinespacing(0);
    Unicode::snprintf(textAreaGateway4Buffer, TEXTAREAGATEWAY4_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M6M7).getText());
    textAreaGateway4.setWildcard(textAreaGateway4Buffer);
    textAreaGateway4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GUI1));
    containerIP_Gateway4.add(textAreaGateway4);

    add(containerIP_Gateway4);

    containerIP_DNS1.setPosition(204, 88, 50, 34);
    flexButtonDNS1.setBoxWithBorderPosition(0, 0, 50, 34);
    flexButtonDNS1.setBorderSize(5);
    flexButtonDNS1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 238, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButtonDNS1.setAction(flexButtonCallback);
    flexButtonDNS1.setPosition(0, 0, 50, 34);
    containerIP_DNS1.add(flexButtonDNS1);

    textAreaDNS1.setPosition(6, 7, 39, 24);
    textAreaDNS1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaDNS1.setLinespacing(0);
    Unicode::snprintf(textAreaDNS1Buffer, TEXTAREADNS1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KS78).getText());
    textAreaDNS1.setWildcard(textAreaDNS1Buffer);
    textAreaDNS1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W469));
    containerIP_DNS1.add(textAreaDNS1);

    add(containerIP_DNS1);

    containerIP_DNS2.setPosition(256, 88, 50, 34);
    flexButtonDNS2.setBoxWithBorderPosition(0, 0, 50, 34);
    flexButtonDNS2.setBorderSize(5);
    flexButtonDNS2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 238, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButtonDNS2.setAction(flexButtonCallback);
    flexButtonDNS2.setPosition(0, 0, 50, 34);
    containerIP_DNS2.add(flexButtonDNS2);

    textAreaDNS2.setPosition(6, 6, 39, 24);
    textAreaDNS2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaDNS2.setLinespacing(0);
    Unicode::snprintf(textAreaDNS2Buffer, TEXTAREADNS2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_X53I).getText());
    textAreaDNS2.setWildcard(textAreaDNS2Buffer);
    textAreaDNS2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X3C4));
    containerIP_DNS2.add(textAreaDNS2);

    add(containerIP_DNS2);

    containerIP_DNS3.setPosition(306, 89, 50, 34);
    flexButtonDNS3.setBoxWithBorderPosition(0, 0, 50, 34);
    flexButtonDNS3.setBorderSize(5);
    flexButtonDNS3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 238, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButtonDNS3.setAction(flexButtonCallback);
    flexButtonDNS3.setPosition(0, 0, 50, 34);
    containerIP_DNS3.add(flexButtonDNS3);

    textAreaDNS3.setPosition(6, 6, 39, 24);
    textAreaDNS3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaDNS3.setLinespacing(0);
    Unicode::snprintf(textAreaDNS3Buffer, TEXTAREADNS3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_V2EV).getText());
    textAreaDNS3.setWildcard(textAreaDNS3Buffer);
    textAreaDNS3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1E31));
    containerIP_DNS3.add(textAreaDNS3);

    add(containerIP_DNS3);

    containerIP_DNS4.setPosition(356, 88, 50, 34);
    flexButtonDNS4.setBoxWithBorderPosition(0, 0, 50, 34);
    flexButtonDNS4.setBorderSize(5);
    flexButtonDNS4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 238, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButtonDNS4.setAction(flexButtonCallback);
    flexButtonDNS4.setPosition(0, 0, 50, 34);
    containerIP_DNS4.add(flexButtonDNS4);

    textAreaDNS4.setPosition(6, 6, 39, 24);
    textAreaDNS4.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaDNS4.setLinespacing(0);
    Unicode::snprintf(textAreaDNS4Buffer, TEXTAREADNS4_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_O693).getText());
    textAreaDNS4.setWildcard(textAreaDNS4Buffer);
    textAreaDNS4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MBKX));
    containerIP_DNS4.add(textAreaDNS4);

    add(containerIP_DNS4);

    containerIP_Address1.setPosition(204, 50, 50, 34);
    flexButtonIPAddress1.setBoxWithBorderPosition(0, 0, 50, 34);
    flexButtonIPAddress1.setBorderSize(5);
    flexButtonIPAddress1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 238, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButtonIPAddress1.setAction(flexButtonCallback);
    flexButtonIPAddress1.setPosition(0, 0, 50, 34);
    containerIP_Address1.add(flexButtonIPAddress1);

    textAreaIPAddress1.setPosition(6, 5, 39, 25);
    textAreaIPAddress1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaIPAddress1.setLinespacing(0);
    Unicode::snprintf(textAreaIPAddress1Buffer, TEXTAREAIPADDRESS1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_V4MF).getText());
    textAreaIPAddress1.setWildcard(textAreaIPAddress1Buffer);
    textAreaIPAddress1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J4ZE));
    containerIP_Address1.add(textAreaIPAddress1);

    add(containerIP_Address1);

    containerIP_Address2.setPosition(255, 50, 50, 34);
    flexButtonIPAddress2.setBoxWithBorderPosition(0, 0, 50, 34);
    flexButtonIPAddress2.setBorderSize(5);
    flexButtonIPAddress2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 238, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButtonIPAddress2.setAction(flexButtonCallback);
    flexButtonIPAddress2.setPosition(0, 0, 50, 34);
    containerIP_Address2.add(flexButtonIPAddress2);

    textAreaIPAddress2.setPosition(6, 6, 39, 24);
    textAreaIPAddress2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaIPAddress2.setLinespacing(0);
    Unicode::snprintf(textAreaIPAddress2Buffer, TEXTAREAIPADDRESS2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LK8X).getText());
    textAreaIPAddress2.setWildcard(textAreaIPAddress2Buffer);
    textAreaIPAddress2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XOIR));
    containerIP_Address2.add(textAreaIPAddress2);

    add(containerIP_Address2);

    containerIP_Address3.setPosition(306, 50, 50, 34);
    flexButtonIPAddress3.setBoxWithBorderPosition(0, 0, 50, 34);
    flexButtonIPAddress3.setBorderSize(5);
    flexButtonIPAddress3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 238, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButtonIPAddress3.setAction(flexButtonCallback);
    flexButtonIPAddress3.setPosition(0, 0, 50, 34);
    containerIP_Address3.add(flexButtonIPAddress3);

    textAreaIPAddress3.setPosition(6, 6, 39, 24);
    textAreaIPAddress3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaIPAddress3.setLinespacing(0);
    Unicode::snprintf(textAreaIPAddress3Buffer, TEXTAREAIPADDRESS3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_91UY).getText());
    textAreaIPAddress3.setWildcard(textAreaIPAddress3Buffer);
    textAreaIPAddress3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IPUZ));
    containerIP_Address3.add(textAreaIPAddress3);

    add(containerIP_Address3);

    containerIP_Address4.setPosition(356, 50, 50, 34);
    flexButtonIPAddress4.setBoxWithBorderPosition(0, 0, 50, 34);
    flexButtonIPAddress4.setBorderSize(5);
    flexButtonIPAddress4.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 238, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 0, 0), touchgfx::Color::getColorFromRGB(255, 255, 255));
    flexButtonIPAddress4.setAction(flexButtonCallback);
    flexButtonIPAddress4.setPosition(0, 0, 50, 34);
    containerIP_Address4.add(flexButtonIPAddress4);

    textAreaIPAddress4.setPosition(6, 6, 39, 24);
    textAreaIPAddress4.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textAreaIPAddress4.setLinespacing(0);
    Unicode::snprintf(textAreaIPAddress4Buffer, TEXTAREAIPADDRESS4_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5IEE).getText());
    textAreaIPAddress4.setWildcard(textAreaIPAddress4Buffer);
    textAreaIPAddress4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CTKB));
    containerIP_Address4.add(textAreaIPAddress4);

    add(containerIP_Address4);

    textAreaIPAddressStatus.setPosition(0, 24, 480, 24);
    textAreaIPAddressStatus.setColor(touchgfx::Color::getColorFromRGB(255, 217, 0));
    textAreaIPAddressStatus.setLinespacing(0);
    textAreaIPAddressStatus.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TCFK));
    add(textAreaIPAddressStatus);

    numberPICKERAddress.setXY(408, 64);
    numberPICKERAddress.setVisible(false);
    add(numberPICKERAddress);
}

ScreenIPAddressesViewBase::~ScreenIPAddressesViewBase()
{

}

void ScreenIPAddressesViewBase::setupScreen()
{
    numberPICKERAddress.initialize();
}

void ScreenIPAddressesViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabelIPAddressReturn)
    {
        //InteractionIPAddressReturn
        //When buttonWithLabelIPAddressReturn clicked change screen to ScreenSettings1
        //Go to ScreenSettings1 with no screen transition
        application().gotoScreenSettings1ScreenNoTransition();
    }
    if (&src == &buttonWithLabelIPAddressApply)
    {
        //InteractionIPAddressApply
        //When buttonWithLabelIPAddressApply clicked call virtual function
        //Call functionSaveAddresses
        functionSaveAddresses();
    }
    if (&src == &buttonWithLabelIPAddressRevert)
    {
        //InteractionIPAddressRevert
        //When buttonWithLabelIPAddressRevert clicked call virtual function
        //Call functionRevertAddresses
        functionRevertAddresses();
    }
}

void ScreenIPAddressesViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonIPAddress1)
    {
        //InteractionAddress1Clicked
        //When flexButtonIPAddress1 clicked call actionSelectAddressByte on ScreenIPAddresses
        //Call actionSelectAddressByte
        actionSelectAddressByte(1);
    }
    if (&src == &flexButtonIPAddress2)
    {
        //InteractionAddress2Clicked
        //When flexButtonIPAddress2 clicked call actionSelectAddressByte on ScreenIPAddresses
        //Call actionSelectAddressByte
        actionSelectAddressByte(2);
    }
    if (&src == &flexButtonIPAddress3)
    {
        //InteractionAddress3Clicked
        //When flexButtonIPAddress3 clicked call actionSelectAddressByte on ScreenIPAddresses
        //Call actionSelectAddressByte
        actionSelectAddressByte(3);
    }
    if (&src == &flexButtonIPAddress4)
    {
        //InteractionAddress4Clicked
        //When flexButtonIPAddress4 clicked call actionSelectAddressByte on ScreenIPAddresses
        //Call actionSelectAddressByte
        actionSelectAddressByte(4);
    }
    if (&src == &flexButtonDNS1)
    {
        //InteractionDNS1Clicked
        //When flexButtonDNS1 clicked call actionSelectAddressByte on ScreenIPAddresses
        //Call actionSelectAddressByte
        actionSelectAddressByte(5);
    }
    if (&src == &flexButtonDNS2)
    {
        //InteractionDNS2Clicked
        //When flexButtonDNS2 clicked call actionSelectAddressByte on ScreenIPAddresses
        //Call actionSelectAddressByte
        actionSelectAddressByte(6);
    }
    if (&src == &flexButtonDNS3)
    {
        //InteractionDNS3Clicked
        //When flexButtonDNS3 clicked call actionSelectAddressByte on ScreenIPAddresses
        //Call actionSelectAddressByte
        actionSelectAddressByte(7);
    }
    if (&src == &flexButtonDNS4)
    {
        //InteractionDNS4Clicked
        //When flexButtonDNS4 clicked call actionSelectAddressByte on ScreenIPAddresses
        //Call actionSelectAddressByte
        actionSelectAddressByte(8);
    }
    if (&src == &flexButtonGateway1)
    {
        //InteractionGateway1Clicked
        //When flexButtonGateway1 clicked call actionSelectAddressByte on ScreenIPAddresses
        //Call actionSelectAddressByte
        actionSelectAddressByte(9);
    }
    if (&src == &flexButtonGateway2)
    {
        //InteractionGateway2Clicked
        //When flexButtonGateway2 clicked call actionSelectAddressByte on ScreenIPAddresses
        //Call actionSelectAddressByte
        actionSelectAddressByte(10);
    }
    if (&src == &flexButtonGateway3)
    {
        //InteractionGateway3Clicked
        //When flexButtonGateway3 clicked call actionSelectAddressByte on ScreenIPAddresses
        //Call actionSelectAddressByte
        actionSelectAddressByte(11);
    }
    if (&src == &flexButtonGateway4)
    {
        //InteractionGateway4Clicked
        //When flexButtonGateway4 clicked call actionSelectAddressByte on ScreenIPAddresses
        //Call actionSelectAddressByte
        actionSelectAddressByte(12);
    }
    if (&src == &flexButtonNetmask1)
    {
        //InteractionNetmask1Clicked
        //When flexButtonNetmask1 clicked call actionSelectAddressByte on ScreenIPAddresses
        //Call actionSelectAddressByte
        actionSelectAddressByte(13);
    }
    if (&src == &flexButtonNetmask2)
    {
        //InteractionNetmask2Clicked
        //When flexButtonNetmask2 clicked call actionSelectAddressByte on ScreenIPAddresses
        //Call actionSelectAddressByte
        actionSelectAddressByte(14);
    }
    if (&src == &flexButtonNetmask3)
    {
        //InteractionNetmask3Clicked
        //When flexButtonNetmask3 clicked call actionSelectAddressByte on ScreenIPAddresses
        //Call actionSelectAddressByte
        actionSelectAddressByte(15);
    }
    if (&src == &flexButtonNetmask4)
    {
        //InteractionNetmask4Clicked
        //When flexButtonNetmask4 clicked call actionSelectAddressByte on ScreenIPAddresses
        //Call actionSelectAddressByte
        actionSelectAddressByte(16);
    }
}

void ScreenIPAddressesViewBase::handleTickEvent()
{
    frameCountInteractionUpdateSelectedAddressWithCounterInterval++;
    if(frameCountInteractionUpdateSelectedAddressWithCounterInterval == TICK_INTERACTIONUPDATESELECTEDADDRESSWITHCOUNTER_INTERVAL)
    {
        //InteractionUpdateSelectedAddressWithCounter
        //When every N tick call virtual function
        //Call functionUpdateSelectedAddressWithCounter
        functionUpdateSelectedAddressWithCounter();
        frameCountInteractionUpdateSelectedAddressWithCounterInterval = 0;
    }
}
