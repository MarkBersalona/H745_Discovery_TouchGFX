/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screenstandby_screen/ScreenStandbyViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ScreenStandbyViewBase::ScreenStandbyViewBase() :
    buttonCallback(this, &ScreenStandbyViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &ScreenStandbyViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    boxStandbyBackground.setPosition(0, 0, 480, 272);
    boxStandbyBackground.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(boxStandbyBackground);

    buttonWithLabelReturnMain.setXY(236, 227);
    buttonWithLabelReturnMain.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUND_PRESSED_ID));
    buttonWithLabelReturnMain.setLabelText(touchgfx::TypedText(T_TEXTID_BUTTONRETURNHOME));
    buttonWithLabelReturnMain.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonWithLabelReturnMain.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelReturnMain.setAction(buttonCallback);
    add(buttonWithLabelReturnMain);

    boxMainTitleBackground.setPosition(0, 0, 480, 24);
    boxMainTitleBackground.setColor(touchgfx::Color::getColorFromRGB(48, 82, 33));
    add(boxMainTitleBackground);

    textAreaStandby.setPosition(397, 0, 83, 24);
    textAreaStandby.setColor(touchgfx::Color::getColorFromRGB(246, 255, 0));
    textAreaStandby.setLinespacing(0);
    textAreaStandby.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8BCO));
    add(textAreaStandby);

    textAreaZWaveSentinel.setXY(0, 0);
    textAreaZWaveSentinel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaZWaveSentinel.setLinespacing(0);
    textAreaZWaveSentinel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_93FB));
    add(textAreaZWaveSentinel);

    containerStandby30.setPosition(49, 76, 43, 40);
    flexButtonStandby30.setBoxWithBorderPosition(0, 0, 43, 40);
    flexButtonStandby30.setBorderSize(5);
    flexButtonStandby30.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 187, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonStandby30.setAction(flexButtonCallback);
    flexButtonStandby30.setPosition(0, 0, 43, 40);
    containerStandby30.add(flexButtonStandby30);

    textArea1.setXY(8, 8);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NHL0));
    containerStandby30.add(textArea1);

    add(containerStandby30);

    containerStandby60.setPosition(92, 76, 43, 40);
    flexButtonStandby60.setBoxWithBorderPosition(0, 0, 43, 40);
    flexButtonStandby60.setBorderSize(5);
    flexButtonStandby60.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 187, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonStandby60.setAction(flexButtonCallback);
    flexButtonStandby60.setPosition(0, 0, 43, 40);
    containerStandby60.add(flexButtonStandby60);

    textArea1_1.setXY(8, 8);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1US2));
    containerStandby60.add(textArea1_1);

    add(containerStandby60);

    containerStandby120.setPosition(135, 76, 58, 40);
    flexButtonStandby120.setBoxWithBorderPosition(0, 0, 58, 40);
    flexButtonStandby120.setBorderSize(5);
    flexButtonStandby120.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 187, 0), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonStandby120.setAction(flexButtonCallback);
    flexButtonStandby120.setPosition(0, 0, 58, 40);
    containerStandby120.add(flexButtonStandby120);

    textArea1_1_1.setXY(11, 8);
    textArea1_1_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1_1_1.setLinespacing(0);
    textArea1_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VSC5));
    containerStandby120.add(textArea1_1_1);

    add(containerStandby120);

    textAreaEnterStandbyTitle.setPosition(34, 52, 172, 24);
    textAreaEnterStandbyTitle.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaEnterStandbyTitle.setLinespacing(0);
    textAreaEnterStandbyTitle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UIJC));
    add(textAreaEnterStandbyTitle);

    buttonWithLabelStandbyUntimed.setXY(13, 126);
    buttonWithLabelStandbyUntimed.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUNDED_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUNDED_PRESSED_ID));
    buttonWithLabelStandbyUntimed.setLabelText(touchgfx::TypedText(T___SINGLEUSE_DZ1J));
    buttonWithLabelStandbyUntimed.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonWithLabelStandbyUntimed.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelStandbyUntimed.setAction(buttonCallback);
    add(buttonWithLabelStandbyUntimed);

    buttonWithLabelStandbyExit.setXY(13, 176);
    buttonWithLabelStandbyExit.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUNDED_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUNDED_PRESSED_ID));
    buttonWithLabelStandbyExit.setLabelText(touchgfx::TypedText(T___SINGLEUSE_LQV5));
    buttonWithLabelStandbyExit.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonWithLabelStandbyExit.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelStandbyExit.setAction(buttonCallback);
    add(buttonWithLabelStandbyExit);

    textArea2.setXY(274, 52);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I71B));
    add(textArea2);

    textAreaStandbyOrActive.setPosition(260, 92, 166, 48);
    textAreaStandbyOrActive.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    textAreaStandbyOrActive.setLinespacing(0);
    textAreaStandbyOrActive.setTypedText(touchgfx::TypedText(T_TEXTID_STANDBYORACTIVE));
    add(textAreaStandbyOrActive);

    textAreaStandbyMinutes.setPosition(271, 144, 145, 24);
    textAreaStandbyMinutes.setColor(touchgfx::Color::getColorFromRGB(0, 255, 225));
    textAreaStandbyMinutes.setLinespacing(0);
    Unicode::snprintf(textAreaStandbyMinutesBuffer, TEXTAREASTANDBYMINUTES_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DT3E).getText());
    textAreaStandbyMinutes.setWildcard(textAreaStandbyMinutesBuffer);
    textAreaStandbyMinutes.setTypedText(touchgfx::TypedText(T_TEXTID_STANDBYMINUTES));
    add(textAreaStandbyMinutes);
}

ScreenStandbyViewBase::~ScreenStandbyViewBase()
{

}

void ScreenStandbyViewBase::setupScreen()
{

}

void ScreenStandbyViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabelReturnMain)
    {
        //InteractionReturnHome
        //When buttonWithLabelReturnMain clicked change screen to screenMain
        //Go to screenMain with screen transition towards East
        application().gotoscreenMainScreenWipeTransitionEast();
    }
    if (&src == &buttonWithLabelStandbyUntimed)
    {
        //InteractionStandbyUnlimited
        //When buttonWithLabelStandbyUntimed clicked set wildcard textAreaStandbyMinutes
        //Set textAreaStandbyMinutes wildcard to __SingleUse_AC24
        Unicode::snprintf(textAreaStandbyMinutesBuffer, TEXTAREASTANDBYMINUTES_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AC24).getText());
        textAreaStandbyMinutes.setWildcard(textAreaStandbyMinutesBuffer);
        textAreaStandbyMinutes.invalidate();
    }
    if (&src == &buttonWithLabelStandbyExit)
    {
        //InteractionStandbyExit
        //When buttonWithLabelStandbyExit clicked set text textAreaStandbyOrActive
        //Set textAreaStandbyOrActive text to Resource: __SingleUse_SVCL
        textAreaStandbyOrActive.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SVCL));
        textAreaStandbyOrActive.invalidate();
    
        //InteractionHideStandbyMinutes
        //When InteractionStandbyExit completed hide textAreaStandbyMinutes
        //Hide textAreaStandbyMinutes
        textAreaStandbyMinutes.setVisible(false);
        textAreaStandbyMinutes.invalidate();
    }
}

void ScreenStandbyViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonStandby30)
    {
        //InteractionStandby30
        //When flexButtonStandby30 clicked set wildcard textAreaStandbyMinutes
        //Set textAreaStandbyMinutes wildcard to __SingleUse_Q384
        Unicode::snprintf(textAreaStandbyMinutesBuffer, TEXTAREASTANDBYMINUTES_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Q384).getText());
        textAreaStandbyMinutes.setWildcard(textAreaStandbyMinutesBuffer);
        textAreaStandbyMinutes.invalidate();
    }
    if (&src == &flexButtonStandby60)
    {
        //InteractionStandby60
        //When flexButtonStandby60 clicked set wildcard textAreaStandbyMinutes
        //Set textAreaStandbyMinutes wildcard to __SingleUse_3WR1
        Unicode::snprintf(textAreaStandbyMinutesBuffer, TEXTAREASTANDBYMINUTES_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_3WR1).getText());
        textAreaStandbyMinutes.setWildcard(textAreaStandbyMinutesBuffer);
        textAreaStandbyMinutes.invalidate();
    }
    if (&src == &flexButtonStandby120)
    {
        //InteractionStandby120
        //When flexButtonStandby120 clicked set wildcard textAreaStandbyMinutes
        //Set textAreaStandbyMinutes wildcard to __SingleUse_R39U
        Unicode::snprintf(textAreaStandbyMinutesBuffer, TEXTAREASTANDBYMINUTES_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_R39U).getText());
        textAreaStandbyMinutes.setWildcard(textAreaStandbyMinutesBuffer);
        textAreaStandbyMinutes.invalidate();
    }
}
