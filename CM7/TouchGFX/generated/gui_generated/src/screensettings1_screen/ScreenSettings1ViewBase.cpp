/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screensettings1_screen/ScreenSettings1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

ScreenSettings1ViewBase::ScreenSettings1ViewBase() :
    buttonCallback(this, &ScreenSettings1ViewBase::buttonCallbackHandler),
    radioButtonSelectedCallback(this, &ScreenSettings1ViewBase::radioButtonSelectedCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    boxSettings1Background.setPosition(0, 0, 480, 272);
    boxSettings1Background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(boxSettings1Background);

    boxMainTitleBackground.setPosition(0, 0, 480, 24);
    boxMainTitleBackground.setColor(touchgfx::Color::getColorFromRGB(48, 82, 33));
    add(boxMainTitleBackground);

    textAreaSettings1.setPosition(326, 0, 154, 24);
    textAreaSettings1.setColor(touchgfx::Color::getColorFromRGB(246, 255, 0));
    textAreaSettings1.setLinespacing(0);
    textAreaSettings1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QY51));
    add(textAreaSettings1);

    buttonWithLabelReturnMain.setXY(236, 227);
    buttonWithLabelReturnMain.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUND_PRESSED_ID));
    buttonWithLabelReturnMain.setLabelText(touchgfx::TypedText(T_TEXTID_BUTTONRETURNHOME));
    buttonWithLabelReturnMain.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonWithLabelReturnMain.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelReturnMain.setAction(buttonCallback);
    add(buttonWithLabelReturnMain);

    textAreaZWaveSentinel.setXY(0, 0);
    textAreaZWaveSentinel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaZWaveSentinel.setLinespacing(0);
    textAreaZWaveSentinel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EKW7));
    add(textAreaZWaveSentinel);

    textAreaSettingsLanguageTitle.setPosition(14, 64, 97, 24);
    textAreaSettingsLanguageTitle.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaSettingsLanguageTitle.setLinespacing(0);
    textAreaSettingsLanguageTitle.setTypedText(touchgfx::TypedText(T_TEXTID_SETTINGS1LANGUAGETITLE));
    add(textAreaSettingsLanguageTitle);

    radioButtonGroupLanguage.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
    
    radioButtonSettings1LanguageEnglish.setXY(122, 58);
    radioButtonSettings1LanguageEnglish.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUND_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUND_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUND_ON_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUND_ON_PRESSED_ID));
    radioButtonSettings1LanguageEnglish.setSelected(true);
    radioButtonSettings1LanguageEnglish.setDeselectionEnabled(false);
    radioButtonGroupLanguage.add(radioButtonSettings1LanguageEnglish);
    add(radioButtonSettings1LanguageEnglish);

    radioButtonSettings1LanguageDeutsch.setXY(122, 94);
    radioButtonSettings1LanguageDeutsch.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUND_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUND_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUND_ON_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUND_ON_PRESSED_ID));
    radioButtonSettings1LanguageDeutsch.setSelected(false);
    radioButtonSettings1LanguageDeutsch.setDeselectionEnabled(false);
    radioButtonGroupLanguage.add(radioButtonSettings1LanguageDeutsch);
    add(radioButtonSettings1LanguageDeutsch);

    textAreaSettings1English.setXY(168, 64);
    textAreaSettings1English.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaSettings1English.setLinespacing(0);
    textAreaSettings1English.setTypedText(touchgfx::TypedText(T_TEXTID_SETTINGS1ENGLISH));
    add(textAreaSettings1English);

    textAreaSettings1Deutsch.setXY(168, 100);
    textAreaSettings1Deutsch.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaSettings1Deutsch.setLinespacing(0);
    textAreaSettings1Deutsch.setTypedText(touchgfx::TypedText(T_TEXTID_SETTINGS1DEUTSCH));
    add(textAreaSettings1Deutsch);

    textAreaSettings1IPTitle.setPosition(14, 148, 97, 24);
    textAreaSettings1IPTitle.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaSettings1IPTitle.setLinespacing(0);
    textAreaSettings1IPTitle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3RMH));
    add(textAreaSettings1IPTitle);

    radioButtonGroupIP.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
    
    radioButtonSettings1IPDHCP.setXY(122, 142);
    radioButtonSettings1IPDHCP.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUND_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUND_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUND_ON_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUND_ON_PRESSED_ID));
    radioButtonSettings1IPDHCP.setSelected(true);
    radioButtonSettings1IPDHCP.setDeselectionEnabled(false);
    radioButtonGroupIP.add(radioButtonSettings1IPDHCP);
    add(radioButtonSettings1IPDHCP);

    radioButtonSettings1IPStatic.setXY(122, 178);
    radioButtonSettings1IPStatic.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUND_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUND_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUND_ON_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUND_ON_PRESSED_ID));
    radioButtonSettings1IPStatic.setSelected(false);
    radioButtonSettings1IPStatic.setDeselectionEnabled(false);
    radioButtonGroupIP.add(radioButtonSettings1IPStatic);
    add(radioButtonSettings1IPStatic);

    textAreaSettings1IP_DHCP.setPosition(168, 148, 288, 24);
    textAreaSettings1IP_DHCP.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaSettings1IP_DHCP.setLinespacing(0);
    textAreaSettings1IP_DHCP.setTypedText(touchgfx::TypedText(T_TEXTID_SETTINGS1IP_DHCP));
    add(textAreaSettings1IP_DHCP);

    textAreaSettings1IPStatic.setXY(168, 184);
    textAreaSettings1IPStatic.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textAreaSettings1IPStatic.setLinespacing(0);
    textAreaSettings1IPStatic.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IWCE));
    add(textAreaSettings1IPStatic);

    buttonWithLabelIPSettings.setXY(236, 178);
    buttonWithLabelIPSettings.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUNDED_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUNDED_PRESSED_ID));
    buttonWithLabelIPSettings.setLabelText(touchgfx::TypedText(T___SINGLEUSE_GCYK));
    buttonWithLabelIPSettings.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonWithLabelIPSettings.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelIPSettings.setAction(buttonCallback);
    add(buttonWithLabelIPSettings);

    textAreaSettings1Status.setPosition(0, 24, 480, 24);
    textAreaSettings1Status.setColor(touchgfx::Color::getColorFromRGB(255, 238, 0));
    textAreaSettings1Status.setLinespacing(0);
    textAreaSettings1Status.setTypedText(touchgfx::TypedText(T_TEXTID_SETTINGS1STATUS));
    add(textAreaSettings1Status);

    buttonWithLabelPrevious.setXY(11, 227);
    buttonWithLabelPrevious.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    buttonWithLabelPrevious.setLabelText(touchgfx::TypedText(T_TEXTID_BUTTONPREVIOUS));
    buttonWithLabelPrevious.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonWithLabelPrevious.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelPrevious.setAction(buttonCallback);
    add(buttonWithLabelPrevious);

    buttonWithLabelNext.setXY(118, 227);
    buttonWithLabelNext.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    buttonWithLabelNext.setLabelText(touchgfx::TypedText(T_TEXTID_BUTTONNEXT));
    buttonWithLabelNext.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonWithLabelNext.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelNext.setAction(buttonCallback);
    add(buttonWithLabelNext);
}

ScreenSettings1ViewBase::~ScreenSettings1ViewBase()
{

}

void ScreenSettings1ViewBase::setupScreen()
{

}

void ScreenSettings1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabelReturnMain)
    {
        //InteractionReturnMain
        //When buttonWithLabelReturnMain clicked change screen to screenMain
        //Go to screenMain with screen transition towards East
        application().gotoscreenMainScreenWipeTransitionEast();
    }
    if (&src == &buttonWithLabelIPSettings)
    {
        //InteractionSettings1Addresses
        //When buttonWithLabelIPSettings clicked change screen to ScreenIPAddresses
        //Go to ScreenIPAddresses with no screen transition
        application().gotoScreenIPAddressesScreenNoTransition();
    }
    if (&src == &buttonWithLabelNext)
    {
        //InteractionSettings1Next
        //When buttonWithLabelNext clicked change screen to ScreenAbout
        //Go to ScreenAbout with no screen transition
        application().gotoScreenAboutScreenNoTransition();
    }
    if (&src == &buttonWithLabelPrevious)
    {
        //InteractionSettings1Previous
        //When buttonWithLabelPrevious clicked change screen to ScreenAbout
        //Go to ScreenAbout with no screen transition
        application().gotoScreenAboutScreenNoTransition();
    }
}

void ScreenSettings1ViewBase::radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &radioButtonSettings1LanguageEnglish)
    {
        //InteractionSettings1SelectEnglish
        //When radioButtonSettings1LanguageEnglish selected set text textAreaSettings1Status
        //Set textAreaSettings1Status text to Resource: textID_Settings1_RadioEnglish
        textAreaSettings1Status.setTypedText(touchgfx::TypedText(T_TEXTID_SETTINGS1_RADIOENGLISH));
        textAreaSettings1Status.invalidate();
    
        //InteractionSetLanguageEnglish
        //When InteractionSettings1SelectEnglish completed call virtual function
        //Call setLanguageEnglish
        setLanguageEnglish();
    }
    if (&src == &radioButtonSettings1LanguageDeutsch)
    {
        //InteractionSettings1SelectDeutsch
        //When radioButtonSettings1LanguageDeutsch selected set text textAreaSettings1Status
        //Set textAreaSettings1Status text to Resource: textID_Settings1RadioDeutsch
        textAreaSettings1Status.setTypedText(touchgfx::TypedText(T_TEXTID_SETTINGS1RADIODEUTSCH));
        textAreaSettings1Status.invalidate();
    
        //InteractionSetLanguageDeutsch
        //When InteractionSettings1SelectDeutsch completed call virtual function
        //Call setLanguageDeutsch
        setLanguageDeutsch();
    }
    if (&src == &radioButtonSettings1IPDHCP)
    {
        //InteractionSettings1SelectDHCP
        //When radioButtonSettings1IPDHCP selected set text textAreaSettings1Status
        //Set textAreaSettings1Status text to Resource: textID_Settings1SelectDHCP
        textAreaSettings1Status.setTypedText(touchgfx::TypedText(T_TEXTID_SETTINGS1SELECTDHCP));
        textAreaSettings1Status.invalidate();
    
        //InteractionEnableDHCP
        //When InteractionSettings1SelectDHCP completed call virtual function
        //Call functionEnableDHCP
        functionEnableDHCP();
    }
    if (&src == &radioButtonSettings1IPStatic)
    {
        //InteractionSettings1SelectStatic
        //When radioButtonSettings1IPStatic selected set text textAreaSettings1Status
        //Set textAreaSettings1Status text to Resource: textID_Settings1SelectStatic
        textAreaSettings1Status.setTypedText(touchgfx::TypedText(T_TEXTID_SETTINGS1SELECTSTATIC));
        textAreaSettings1Status.invalidate();
    
        //InteractionDisableDHCP
        //When InteractionSettings1SelectStatic completed call virtual function
        //Call functionDisableDHCP
        functionDisableDHCP();
    }
}
